// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package database

import (
	"database/sql"
	"time"

	"github.com/gofrs/uuid"
	"github.com/jackc/pgtype"
)

type BorderwallRequests struct {
	RequestUuid     uuid.UUID       `json:"request_uuid"`
	CreatedAt       time.Time       `json:"created_at"`
	UpdatedAt       time.Time       `json:"updated_at"`
	GuildID         int64           `json:"guild_id"`
	UserID          int64           `json:"user_id"`
	IsVerified      bool            `json:"is_verified"`
	VerifiedAt      sql.NullTime    `json:"verified_at"`
	IpAddress       pgtype.Inet     `json:"ip_address"`
	RecaptchaScore  sql.NullFloat64 `json:"recaptcha_score"`
	IpintelScore    sql.NullFloat64 `json:"ipintel_score"`
	CountryCode     sql.NullString  `json:"country_code"`
	UaFamily        sql.NullString  `json:"ua_family"`
	UaFamilyVersion sql.NullString  `json:"ua_family_version"`
	UaOs            sql.NullString  `json:"ua_os"`
	UaOsVersion     sql.NullString  `json:"ua_os_version"`
}

type CustomBots struct {
	CustomBotUuid     uuid.UUID `json:"custom_bot_uuid"`
	GuildID           int64     `json:"guild_id"`
	PublicKey         string    `json:"public_key"`
	Token             string    `json:"token"`
	CreatedAt         time.Time `json:"created_at"`
	IsActive          bool      `json:"is_active"`
	ApplicationID     int64     `json:"application_id"`
	ApplicationName   string    `json:"application_name"`
	ApplicationAvatar string    `json:"application_avatar"`
	Environment       string    `json:"environment"`
}

type DiscordSubscriptions struct {
	SubscriptionID  string        `json:"subscription_id"`
	CreatedAt       time.Time     `json:"created_at"`
	UpdatedAt       time.Time     `json:"updated_at"`
	UserID          int64         `json:"user_id"`
	GiftCodeFlags   sql.NullInt64 `json:"gift_code_flags"`
	GuildID         sql.NullInt64 `json:"guild_id"`
	StartsAt        sql.NullTime  `json:"starts_at"`
	EndsAt          sql.NullTime  `json:"ends_at"`
	SkuID           int64         `json:"sku_id"`
	ApplicationID   int64         `json:"application_id"`
	EntitlementType int64         `json:"entitlement_type"`
	Deleted         bool          `json:"deleted"`
	Consumed        bool          `json:"consumed"`
}

type GuildInvites struct {
	InviteCode string    `json:"invite_code"`
	GuildID    int64     `json:"guild_id"`
	CreatedBy  int64     `json:"created_by"`
	CreatedAt  time.Time `json:"created_at"`
	Uses       int64     `json:"uses"`
}

type GuildSettingsAutoroles struct {
	GuildID       int64   `json:"guild_id"`
	ToggleEnabled bool    `json:"toggle_enabled"`
	Roles         []int64 `json:"roles"`
}

type GuildSettingsBorderwall struct {
	GuildID         int64        `json:"guild_id"`
	ToggleEnabled   bool         `json:"toggle_enabled"`
	ToggleSendDm    bool         `json:"toggle_send_dm"`
	Channel         int64        `json:"channel"`
	MessageVerify   pgtype.JSONB `json:"message_verify"`
	MessageVerified pgtype.JSONB `json:"message_verified"`
	RolesOnJoin     []int64      `json:"roles_on_join"`
	RolesOnVerify   []int64      `json:"roles_on_verify"`
}

type GuildSettingsFreeroles struct {
	GuildID       int64   `json:"guild_id"`
	ToggleEnabled bool    `json:"toggle_enabled"`
	Roles         []int64 `json:"roles"`
}

type GuildSettingsLeaver struct {
	GuildID       int64        `json:"guild_id"`
	ToggleEnabled bool         `json:"toggle_enabled"`
	Channel       int64        `json:"channel"`
	MessageFormat pgtype.JSONB `json:"message_format"`
}

type GuildSettingsRules struct {
	GuildID          int64    `json:"guild_id"`
	ToggleEnabled    bool     `json:"toggle_enabled"`
	ToggleDmsEnabled bool     `json:"toggle_dms_enabled"`
	Rules            []string `json:"rules"`
}

type GuildSettingsTempchannels struct {
	GuildID          int64 `json:"guild_id"`
	ToggleEnabled    bool  `json:"toggle_enabled"`
	ToggleAutopurge  bool  `json:"toggle_autopurge"`
	ChannelLobby     int64 `json:"channel_lobby"`
	ChannelCategory  int64 `json:"channel_category"`
	DefaultUserCount int32 `json:"default_user_count"`
}

type GuildSettingsTimeroles struct {
	GuildID       int64        `json:"guild_id"`
	ToggleEnabled bool         `json:"toggle_enabled"`
	Timeroles     pgtype.JSONB `json:"timeroles"`
}

type GuildSettingsWelcomerDms struct {
	GuildID             int64        `json:"guild_id"`
	ToggleEnabled       bool         `json:"toggle_enabled"`
	ToggleUseTextFormat bool         `json:"toggle_use_text_format"`
	ToggleIncludeImage  bool         `json:"toggle_include_image"`
	MessageFormat       pgtype.JSONB `json:"message_format"`
}

type GuildSettingsWelcomerImages struct {
	GuildID                int64  `json:"guild_id"`
	ToggleEnabled          bool   `json:"toggle_enabled"`
	ToggleImageBorder      bool   `json:"toggle_image_border"`
	ToggleShowAvatar       bool   `json:"toggle_show_avatar"`
	BackgroundName         string `json:"background_name"`
	ColourText             string `json:"colour_text"`
	ColourTextBorder       string `json:"colour_text_border"`
	ColourImageBorder      string `json:"colour_image_border"`
	ColourProfileBorder    string `json:"colour_profile_border"`
	ImageAlignment         int32  `json:"image_alignment"`
	ImageTheme             int32  `json:"image_theme"`
	ImageMessage           string `json:"image_message"`
	ImageProfileBorderType int32  `json:"image_profile_border_type"`
}

type GuildSettingsWelcomerText struct {
	GuildID       int64        `json:"guild_id"`
	ToggleEnabled bool         `json:"toggle_enabled"`
	Channel       int64        `json:"channel"`
	MessageFormat pgtype.JSONB `json:"message_format"`
}

type Guilds struct {
	GuildID          int64         `json:"guild_id"`
	EmbedColour      int32         `json:"embed_colour"`
	SiteSplashUrl    string        `json:"site_splash_url"`
	SiteStaffVisible bool          `json:"site_staff_visible"`
	SiteGuildVisible bool          `json:"site_guild_visible"`
	SiteAllowInvites bool          `json:"site_allow_invites"`
	MemberCount      int32         `json:"member_count"`
	NumberLocale     sql.NullInt32 `json:"number_locale"`
}

type InteractionCommands struct {
	ApplicationID int64     `json:"application_id"`
	Command       string    `json:"command"`
	InteractionID int64     `json:"interaction_id"`
	CreatedAt     time.Time `json:"created_at"`
}

type PatreonUsers struct {
	PatreonUserID    int64     `json:"patreon_user_id"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
	UserID           int64     `json:"user_id"`
	FullName         string    `json:"full_name"`
	Email            string    `json:"email"`
	ThumbUrl         string    `json:"thumb_url"`
	PledgeCreatedAt  time.Time `json:"pledge_created_at"`
	PledgeEndedAt    time.Time `json:"pledge_ended_at"`
	TierID           int64     `json:"tier_id"`
	LastChargeStatus string    `json:"last_charge_status"`
	PatronStatus     string    `json:"patron_status"`
}

type PaypalSubscriptions struct {
	SubscriptionID     string    `json:"subscription_id"`
	CreatedAt          time.Time `json:"created_at"`
	UpdatedAt          time.Time `json:"updated_at"`
	UserID             int64     `json:"user_id"`
	PayerID            string    `json:"payer_id"`
	LastBilledAt       time.Time `json:"last_billed_at"`
	NextBillingAt      time.Time `json:"next_billing_at"`
	SubscriptionStatus string    `json:"subscription_status"`
	PlanID             string    `json:"plan_id"`
	Quantity           string    `json:"quantity"`
}

type ScienceCommandErrors struct {
	CommandUuid uuid.UUID    `json:"command_uuid"`
	CreatedAt   time.Time    `json:"created_at"`
	Trace       string       `json:"trace"`
	Data        pgtype.JSONB `json:"data"`
}

type ScienceCommandUsages struct {
	CommandUuid     uuid.UUID     `json:"command_uuid"`
	CreatedAt       time.Time     `json:"created_at"`
	GuildID         int64         `json:"guild_id"`
	UserID          int64         `json:"user_id"`
	ChannelID       sql.NullInt64 `json:"channel_id"`
	Command         string        `json:"command"`
	Errored         bool          `json:"errored"`
	ExecutionTimeMs int64         `json:"execution_time_ms"`
}

type ScienceEvents struct {
	EventUuid uuid.UUID    `json:"event_uuid"`
	CreatedAt time.Time    `json:"created_at"`
	EventType int32        `json:"event_type"`
	Data      pgtype.JSONB `json:"data"`
}

type ScienceGuildEvents struct {
	GuildEventUuid uuid.UUID     `json:"guild_event_uuid"`
	GuildID        int64         `json:"guild_id"`
	UserID         sql.NullInt64 `json:"user_id"`
	CreatedAt      time.Time     `json:"created_at"`
	EventType      int32         `json:"event_type"`
	Data           pgtype.JSON   `json:"data"`
}

type UserMemberships struct {
	MembershipUuid  uuid.UUID `json:"membership_uuid"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
	StartedAt       time.Time `json:"started_at"`
	ExpiresAt       time.Time `json:"expires_at"`
	Status          int32     `json:"status"`
	MembershipType  int32     `json:"membership_type"`
	TransactionUuid uuid.UUID `json:"transaction_uuid"`
	UserID          int64     `json:"user_id"`
	GuildID         int64     `json:"guild_id"`
}

type UserTransactions struct {
	TransactionUuid   uuid.UUID `json:"transaction_uuid"`
	CreatedAt         time.Time `json:"created_at"`
	UpdatedAt         time.Time `json:"updated_at"`
	UserID            int64     `json:"user_id"`
	PlatformType      int32     `json:"platform_type"`
	TransactionID     string    `json:"transaction_id"`
	TransactionStatus int32     `json:"transaction_status"`
	CurrencyCode      string    `json:"currency_code"`
	Amount            string    `json:"amount"`
}

type Users struct {
	UserID        int64     `json:"user_id"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
	Name          string    `json:"name"`
	Discriminator string    `json:"discriminator"`
	AvatarHash    string    `json:"avatar_hash"`
	Background    string    `json:"background"`
}

type WelcomerImages struct {
	ImageUuid uuid.UUID `json:"image_uuid"`
	GuildID   int64     `json:"guild_id"`
	CreatedAt time.Time `json:"created_at"`
	ImageType string    `json:"image_type"`
	Data      []byte    `json:"data"`
}
