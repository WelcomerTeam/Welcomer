// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForCreateManyScienceGuildEvents implements pgx.CopyFromSource.
type iteratorForCreateManyScienceGuildEvents struct {
	rows                 []CreateManyScienceGuildEventsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateManyScienceGuildEvents) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateManyScienceGuildEvents) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].GuildEventUuid,
		r.rows[0].GuildID,
		r.rows[0].UserID,
		r.rows[0].CreatedAt,
		r.rows[0].EventType,
		r.rows[0].Data,
	}, nil
}

func (r iteratorForCreateManyScienceGuildEvents) Err() error {
	return nil
}

func (q *Queries) CreateManyScienceGuildEvents(ctx context.Context, arg []CreateManyScienceGuildEventsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"science_guild_events"}, []string{"guild_event_uuid", "guild_id", "user_id", "created_at", "event_type", "data"}, &iteratorForCreateManyScienceGuildEvents{rows: arg})
}
